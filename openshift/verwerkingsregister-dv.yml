apiVersion: v1
kind: Template
metadata:
  name: verwerkingsregister
objects:
- apiVersion: v1
  kind: BuildConfig
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftNewApp
    labels:
      app: verwerkingsregister
    name: verwerkingsregister
    namespace: verwerkingsregisterdv
  spec:
    resources:
      requests:
        memory: 0.1Gi
      limits:
        memory: 0.5Gi
    failedBuildsHistoryLimit: 5
    nodeSelector: null
    output:
      to:
        kind: ImageStreamTag
        name: verwerkingsregister:latest
    postCommit: {}
    runPolicy: Serial
    source:
      git:
        ref: master
        uri: 'git@github.com:StadGent/nuxt_site_verwerkingsregister.git'
      sourceSecret:
        name: digipolisgent-ci
      type: Git
    strategy:
      sourceStrategy:
        env:
          - name: HOST
            value: 0.0.0.0
          - name: NODE_ENV
            value: test
        from:
          kind: ImageStreamTag
          name: nodejs-8-rhel7:latest
      type: Source
    successfulBuildsHistoryLimit: 5
- apiVersion: v1
  kind: ImageStream
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftNewApp
    creationTimestamp: null
    generation: 1
    labels:
      app: verwerkingsregister
    name: verwerkingsregister
    namespace: verwerkingsregisterdv
  spec:
    lookupPolicy:
      local: false
    tags:
    - annotations: null
      from:
        kind: DockerImage
        name: docker-registry.default.svc:5000/verwerkingsregisterdv/verwerkingsregister
      generation: null
      importPolicy: {}
      name: latest
      referencePolicy:
        type: ""
  status:
    dockerImageRepository: ""
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftNewApp
    creationTimestamp: null
    generation: 1
    labels:
      app: verwerkingsregister
    name: verwerkingsregister
    namespace: verwerkingsregisterdv
  spec:
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      app: verwerkingsregister
      deploymentconfig: verwerkingsregister
    strategy:
      activeDeadlineSeconds: 21600
      resources: {}
      rollingParams:
        intervalSeconds: 1
        maxSurge: 25%
        maxUnavailable: 25%
        timeoutSeconds: 600
        updatePeriodSeconds: 1
      type: Rolling
    template:
      metadata:
        annotations:
          openshift.io/generated-by: OpenShiftNewApp
        creationTimestamp: null
        labels:
          app: verwerkingsregister
          deploymentconfig: verwerkingsregister
      spec:
        containers:
          - env:
              - name: DEPLOY_ENV
                value: test
            image: >-
              docker-registry.default.svc:5000/verwerkingsregisterdv/verwerkingsregister
            imagePullPolicy: Always
            name: verwerkingsregister
            ports:
              - containerPort: 8080
                protocol: TCP
            resources: 
              requests:
                memory: 0.5Gi
              limits:
                memory: 1Gi
            terminationMessagePath: /dev/termination-log
            terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
    test: false
    triggers:
      - type: ConfigChange
      - imageChangeParams:
          automatic: true
          containerNames:
            - verwerkingsregister
          from:
            kind: ImageStreamTag
            name: verwerkingsregister:latest
            namespace: verwerkingsregisterdv
          lastTriggeredImage: >-
            docker-registry.default.svc:5000/verwerkingsregisterdv/verwerkingsregister
        type: ImageChange
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftNewApp
    creationTimestamp: null
    labels:
      app: verwerkingsregister
    name: verwerkingsregister
    namespace: verwerkingsregisterdv
  spec:
    ports:
      - name: 8080-tcp
        port: 8080
        protocol: TCP
        targetPort: 8080
    selector:
      app: verwerkingsregister
      deploymentconfig: verwerkingsregister
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}